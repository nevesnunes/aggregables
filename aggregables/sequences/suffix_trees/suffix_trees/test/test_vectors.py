from suffix_trees import STree
import os
import pytest

# Test again vectors generated by: gen_vectors.py
INPUT = "vectors.txt"


def pytest_addoption(parser):
    parser.addoption("--vectors", action="store_true", help="run all combinations")


def test_vectors():
    if not os.getenv("SUFFIX_TREES_TEST_VECTORS") == "1":
        pytest.skip("skipping vectors test. Set SUFFIX_TREES_TEST_VECTORS=1 to run.")

    with open(os.path.join(os.path.dirname(os.path.abspath(__file__)), INPUT), 'r') as f:
        for line in f:
            splitted = line.split(",")
            search_string = splitted[0]
            # Build tree on the search string.
            st = STree.STree(search_string)
            # Test cases
            for case in splitted[1:-1]:
                [s, res] = case.split(":")
                assert int(res) == st.find(s), "Search string: {}, Test case: {}, Expected: {}".format(
                    search_string, s, int(res))
